// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/flow/flow.proto

package flow

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Flow represents a network flow between two endpoints
type Flow struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// L3 (IP) information
	SourceIp      string `protobuf:"bytes,1,opt,name=source_ip,json=sourceIp,proto3" json:"source_ip,omitempty"`
	DestinationIp string `protobuf:"bytes,2,opt,name=destination_ip,json=destinationIp,proto3" json:"destination_ip,omitempty"`
	// L4 (TCP/UDP) information
	SourcePort      uint32 `protobuf:"varint,3,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	DestinationPort uint32 `protobuf:"varint,4,opt,name=destination_port,json=destinationPort,proto3" json:"destination_port,omitempty"`
	// Protocol (TCP/UDP)
	Protocol string `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// Kubernetes metadata
	SourcePod            string `protobuf:"bytes,6,opt,name=source_pod,json=sourcePod,proto3" json:"source_pod,omitempty"`
	SourceNamespace      string `protobuf:"bytes,7,opt,name=source_namespace,json=sourceNamespace,proto3" json:"source_namespace,omitempty"`
	DestinationPod       string `protobuf:"bytes,8,opt,name=destination_pod,json=destinationPod,proto3" json:"destination_pod,omitempty"`
	DestinationNamespace string `protobuf:"bytes,9,opt,name=destination_namespace,json=destinationNamespace,proto3" json:"destination_namespace,omitempty"`
	// Flow verdict (FORWARDED or DROPPED)
	Verdict string `protobuf:"bytes,10,opt,name=verdict,proto3" json:"verdict,omitempty"`
	// Timestamp of the flow
	Time          int64 `protobuf:"varint,11,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Flow) Reset() {
	*x = Flow{}
	mi := &file_proto_flow_flow_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Flow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flow) ProtoMessage() {}

func (x *Flow) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flow_flow_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flow.ProtoReflect.Descriptor instead.
func (*Flow) Descriptor() ([]byte, []int) {
	return file_proto_flow_flow_proto_rawDescGZIP(), []int{0}
}

func (x *Flow) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

func (x *Flow) GetDestinationIp() string {
	if x != nil {
		return x.DestinationIp
	}
	return ""
}

func (x *Flow) GetSourcePort() uint32 {
	if x != nil {
		return x.SourcePort
	}
	return 0
}

func (x *Flow) GetDestinationPort() uint32 {
	if x != nil {
		return x.DestinationPort
	}
	return 0
}

func (x *Flow) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *Flow) GetSourcePod() string {
	if x != nil {
		return x.SourcePod
	}
	return ""
}

func (x *Flow) GetSourceNamespace() string {
	if x != nil {
		return x.SourceNamespace
	}
	return ""
}

func (x *Flow) GetDestinationPod() string {
	if x != nil {
		return x.DestinationPod
	}
	return ""
}

func (x *Flow) GetDestinationNamespace() string {
	if x != nil {
		return x.DestinationNamespace
	}
	return ""
}

func (x *Flow) GetVerdict() string {
	if x != nil {
		return x.Verdict
	}
	return ""
}

func (x *Flow) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

// GetFlowsRequest is an empty message as we don't need any parameters for now
type GetFlowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFlowsRequest) Reset() {
	*x = GetFlowsRequest{}
	mi := &file_proto_flow_flow_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFlowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlowsRequest) ProtoMessage() {}

func (x *GetFlowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_flow_flow_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlowsRequest.ProtoReflect.Descriptor instead.
func (*GetFlowsRequest) Descriptor() ([]byte, []int) {
	return file_proto_flow_flow_proto_rawDescGZIP(), []int{1}
}

var File_proto_flow_flow_proto protoreflect.FileDescriptor

const file_proto_flow_flow_proto_rawDesc = "" +
	"\n" +
	"\x15proto/flow/flow.proto\x12\x04flow\"\x88\x03\n" +
	"\x04Flow\x12\x1b\n" +
	"\tsource_ip\x18\x01 \x01(\tR\bsourceIp\x12%\n" +
	"\x0edestination_ip\x18\x02 \x01(\tR\rdestinationIp\x12\x1f\n" +
	"\vsource_port\x18\x03 \x01(\rR\n" +
	"sourcePort\x12)\n" +
	"\x10destination_port\x18\x04 \x01(\rR\x0fdestinationPort\x12\x1a\n" +
	"\bprotocol\x18\x05 \x01(\tR\bprotocol\x12\x1d\n" +
	"\n" +
	"source_pod\x18\x06 \x01(\tR\tsourcePod\x12)\n" +
	"\x10source_namespace\x18\a \x01(\tR\x0fsourceNamespace\x12'\n" +
	"\x0fdestination_pod\x18\b \x01(\tR\x0edestinationPod\x123\n" +
	"\x15destination_namespace\x18\t \x01(\tR\x14destinationNamespace\x12\x18\n" +
	"\averdict\x18\n" +
	" \x01(\tR\averdict\x12\x12\n" +
	"\x04time\x18\v \x01(\x03R\x04time\"\x11\n" +
	"\x0fGetFlowsRequest2@\n" +
	"\vFlowService\x121\n" +
	"\bGetFlows\x12\x15.flow.GetFlowsRequest\x1a\n" +
	".flow.Flow\"\x000\x01B\x1cZ\x1ahubbleclone/pkg/proto/flowb\x06proto3"

var (
	file_proto_flow_flow_proto_rawDescOnce sync.Once
	file_proto_flow_flow_proto_rawDescData []byte
)

func file_proto_flow_flow_proto_rawDescGZIP() []byte {
	file_proto_flow_flow_proto_rawDescOnce.Do(func() {
		file_proto_flow_flow_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_flow_flow_proto_rawDesc), len(file_proto_flow_flow_proto_rawDesc)))
	})
	return file_proto_flow_flow_proto_rawDescData
}

var file_proto_flow_flow_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_flow_flow_proto_goTypes = []any{
	(*Flow)(nil),            // 0: flow.Flow
	(*GetFlowsRequest)(nil), // 1: flow.GetFlowsRequest
}
var file_proto_flow_flow_proto_depIdxs = []int32{
	1, // 0: flow.FlowService.GetFlows:input_type -> flow.GetFlowsRequest
	0, // 1: flow.FlowService.GetFlows:output_type -> flow.Flow
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_flow_flow_proto_init() }
func file_proto_flow_flow_proto_init() {
	if File_proto_flow_flow_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_flow_flow_proto_rawDesc), len(file_proto_flow_flow_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_flow_flow_proto_goTypes,
		DependencyIndexes: file_proto_flow_flow_proto_depIdxs,
		MessageInfos:      file_proto_flow_flow_proto_msgTypes,
	}.Build()
	File_proto_flow_flow_proto = out.File
	file_proto_flow_flow_proto_goTypes = nil
	file_proto_flow_flow_proto_depIdxs = nil
}
